<?php
/**
 * Passwd Hooks configuration file.
 *
 * THE HOOKS PROVIDED IN THIS FILE ARE EXAMPLES ONLY.  DO NOT ENABLE THEM
 * BLINDLY IF YOU DO NOT KNOW WHAT YOU ARE DOING.  YOU HAVE TO CUSTOMIZE THEM
 * TO MATCH YOUR SPECIFIC NEEDS AND SYSTEM ENVIRONMENT.
 *
 * For more information please see the horde/config/hooks.php.dist file.
 *
 * $Id$
 */
class Passwd_Hooks
{
    /**
     * Username hook.
     *
     * @param string $userid  The username.
     * @param TODO $driver    TODO
     *
     * @return string  TODO
     */
//    public function username($userid, $driver)
//    {
//        // Example #1: Translate what the user enters, in the username box,
//        // into what the backend expects.
//        return $userid . '@example.com';
//
//
//        // Example #2: Return a different $userid based on the driver type.
//        // Uses the composite driver.
//        if ($driver instanceof Passwd_Driver_http) {
//            return $userid . '@example.com';
//        }
//
//        if ($driver instanceof Passwd_Driver_composite) {
//            foreach ($driver->_params['drivers'] as $backend => $config) {
//                if ($backend == 'http') {
//                    $driver->_params['drivers']['http']['params']['be_username'] = $userid . '@example.com';
//                    break;
//                }
//            }
//        }
//
//        return $userid;
//    }


    /**
     * Default username hook.
     *
     * @param string $userid  The username.
     *
     * @return string  TODO
     */
//    public function default_username($userid)
//    {
//        // Example: Set the username the passwd module sees when resetting
//        // passwords based on userid and realm.  The default is to take a
//        // username of user@domain.tld and change it to user.  If we want to
//        // leave it untouched, enable the hook and use this function.
//        return $userid;
//    }


    /**
     * Userdn hook.
     *
     * @param string $authid  The authenticated username.
     *
     * @return string  TODO
     */
//    public function userdn($authid)
//    {
//        // Example: Provide LDAP server with a userdn so that you do not have
//        // to perform anonymous binds.
//        return 'uid=' . $authid . ',o=example.com';
//    }


    /**
     * TODO
     */
//    public function password_changed($user, $oldpassword, $newpassword)
//    {
//        Horde::logMessage(sprintf('User %s has changed his password.', $user), 'NOTICE');
//    }
}
